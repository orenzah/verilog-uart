/*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\         ___            \\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\     . -^   '--,        \\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\    /# ========='-_     \\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\   /# (--====___====\   \\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\  /#   .- --.  . --.|   \\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\ /##   |  * ) (   * ),  \\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\ |##   \    /\ \   / |  \\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\ |###   ---   \ ---  |  \\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\ |####      ___)    #|  \\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\ |######           ##|  \\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\  \##### ---------- /   \\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\   \####           (    \\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\    '\###          |    \\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\      \###         |    \\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\       \##        |     \\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\        \###.    .)     \\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\         '======/       \\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\ $$$$$$\ $$\   $$\ $$$$$$\ $$\      $$\       $$\      $$\$$$$$$$$\ \\
\\$$  __$$\$$ |  $$ $$  __$$\$$ | $\  $$ |      $$$\    $$$ $$  _____|\\ 
\\$$ /  \__$$ |  $$ $$ /  $$ $$ |$$$\ $$ |      $$$$\  $$$$ $$ |      \\ 
\\\$$$$$$\ $$$$$$$$ $$ |  $$ $$ $$ $$\$$ |      $$\$$\$$ $$ $$$$$\    \\ 
\\ \____$$\$$  __$$ $$ |  $$ $$$$  _$$$$ |      $$ \$$$  $$ $$  __|   \\
\\$$\   $$ $$ |  $$ $$ |  $$ $$$  / \$$$ |      $$ |\$  /$$ $$ |      \\ 
\\\$$$$$$  $$ |  $$ |$$$$$$  $$  /   \$$ |      $$ | \_/ $$ $$$$$$$$\ \\ 
\\ \______/\__|  \__|\______/\__/     \__|      \__|     \__\________|\\ 
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\              $$\      $$\$$\   $$\ $$$$$$\$$$$$$$$\                \\ 
\\              $$ | $\  $$ $$ |  $$ $$  __$$\__$$  __|               \\ 
\\              $$ |$$$\ $$ $$ |  $$ $$ /  $$ | $$ |                  \\ 
\\              $$ $$ $$\$$ $$$$$$$$ $$$$$$$$ | $$ |                  \\ 
\\              $$$$  _$$$$ $$  __$$ $$  __$$ | $$ |                  \\ 
\\              $$$  / \$$$ $$ |  $$ $$ |  $$ | $$ |                  \\ 
\\              $$  /   \$$ $$ |  $$ $$ |  $$ | $$ |                  \\ 
\\              \__/     \__\__|  \__\__|  \__| \__|                  \\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ 
\\   $$\     $$\ $$$$$$\ $$\   $$\        $$$$$$\  $$$$$$\$$$$$$$$|   \\ 
\\   \$$\   $$  $$  __$$\$$ |  $$ |      $$  __$$\$$  __$$\__$$  _|   \\
\\    \$$\ $$  /$$ /  $$ $$ |  $$ |      $$ /  \__$$ /  $$ | $$ |     \\
\\     \$$$$  / $$ |  $$ $$ |  $$ |      $$ |$$$$\$$ |  $$ | $$ |     \\
\\      \$$  /  $$ |  $$ $$ |  $$ |      $$ |\_$$ $$ |  $$ | $$ |     \\
\\       $$ |   $$ |  $$ $$ |  $$ |      $$ |  $$ $$ |  $$ | $$ |     \\
\\       $$ |    $$$$$$  \$$$$$$  |      \$$$$$$  |$$$$$$  | $$ |     \\
\\       \__|    \______/ \______/        \______/ \______/  \__|     \\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\                                                                     
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/
`include "main_mcu_rev.v"
`include "uart_rx_rev.v"
`include "rx_fifo_rev.v"
`include "uart_tx.v"
`include "reset.v"
`include "lcd_mcu_rev.v"
`include "pattern_rev.v"






module project_top(
                    i_Clock,                    
                    
                    i_Rx_UART,
						  o_Rx_UART,
                    o_Tx_UART,
                    
                    i_SW_Reset,
                    i_SW_Datalength,
                    i_SW_Baudrate,
                    i_SW_Parity,
                    
                    o_LCD_RS,
                    o_LCD_RW,
                    o_LCD_Data,
                    o_LCD_E,
                    
                    o_LED,
						  o_LED1,
                    o_LED2,
                    o_LED3,
						  o_LED4,
						  o_LED5,
						  o_LED6,
						  o_LED7						  
                    );

input           i_Clock;
input           i_SW_Reset, i_SW_Datalength, i_SW_Baudrate, i_SW_Parity;

input           i_Rx_UART;
output			 o_Rx_UART;
assign o_Rx_UART = i_Rx_UART;

output          o_Tx_UART;

output          o_LCD_RS, o_LCD_RW, o_LCD_E;
output  [7:0]   o_LCD_Data;

output          o_LED, o_LED1, o_LED2, o_LED3, o_LED4, o_LED5, o_LED6, o_LED7;




wire            w_Reset_Buffered;

wire			w_Rx_FIFO_ReadRequest;
wire	[7:0] w_Rx_FIFO_DataOut;
wire			w_Rx_FIFO_Buffer_EMPTY;
wire			w_Rx_FIFO_Buffer_FULL;
wire			w_Tx_UART_WriteEnable;
wire	[7:0]	w_Tx_UART_Data;
wire			w_Tx_UART_Busy;
wire			w_Rx_DataReady;
wire			w_LCD_Valid_Data;
wire			w_LCD_Done_Display;


wire	[7:0] w_Rx_DataOut;

 
 wire    w_Parity_Valid_Det;
 wire    w_Parity_Value_Det;
 assign  w_Parity_Selector    =   (w_Parity_Valid_Det) ? 
															w_Parity_Value_Det :
															i_SW_Parity;
                                               
 wire    w_Baudrate_Valid_Det;
 wire    w_Baudrate_Value_Det;
 assign  w_Baudrate_Selector    =   (w_Baudrate_Valid_Det) ? 
															w_Baudrate_Value_Det :
															i_SW_Baudrate;   
                                               
 wire    w_Datalength_Valid_Det;
 wire    w_Datalength_Value_Det;
 assign  w_Datalength_Selector    =   (w_Datalength_Valid_Det) ? 
															w_Datalength_Value_Det :
															i_SW_Datalength; 
															
wire			w_Rx_ParityError;
wire			w_Rx_FrameError;


assign	o_LED = w_Rx_ParityError;
assign	o_LED1 = w_Rx_FrameError;
//assign	o_LED2;


assign	o_LED5 = w_Baudrate_Selector;
assign	o_LED6 = w_Parity_Selector;
assign	o_LED7 = w_Datalength_Selector;


////////////////////////////////////////////////////////////////////////
///////////////////// $$\      $$\  $$$$$$\  $$\   $$\  ////////////////
///////////////////// $$$\    $$$ |$$  __$$\ $$ |  $$ | ////////////////
///////////////////// $$$$\  $$$$ |$$ /  \__|$$ |  $$ | ////////////////
///////////////////// $$\$$\$$ $$ |$$ |      $$ |  $$ | ////////////////
///////////////////// $$ \$$$  $$ |$$ |      $$ |  $$ | ////////////////
///////////////////// $$ |\$  /$$ |$$ |  $$\ $$ |  $$ | ////////////////
///////////////////// $$ | \_/ $$ |\$$$$$$  |\$$$$$$  | ////////////////
///////////////////// \__|     \__| \______/  \______/  ////////////////
////////////////////////////////////////////////////////////////////////
		main_mcu_rev    mcu(
                        .clock(i_Clock),
                        .reset(w_Reset_Buffered),
                        .o_Rx_FIFO_ReadRequest(w_Rx_FIFO_ReadRequest),
                        .i_Rx_FIFO_DataOut(w_Rx_FIFO_DataOut),
                        .i_Rx_FIFO_Buffer_EMPTY(w_Rx_FIFO_Buffer_EMPTY),
                        .i_Rx_FIFO_Buffer_FULL(w_Rx_FIFO_Buffer_FULL),
                        .o_Tx_UART_WriteEnable(w_Tx_UART_WriteEnable),
                        .o_Tx_UART_Data(w_Tx_UART_Data),
                        .i_Tx_UART_Busy(w_Tx_UART_Busy),
                        .i_Rx_UART_DataReady(w_Rx_DataReady),
                        .o_LCD_Valid_Data(w_LCD_Valid_Data),
                        .i_LCD_Done_Display(w_LCD_Done_Display),
								.o_LED3(o_LED3)
                        );
////////////////////////////////////////////////////////////////////////
//////////////////////// $$$$$$$\             //////////////////////////
//////////////////////// $$  __$$\            //////////////////////////
//////////////////////// $$ |  $$ |$$\   $$\  //////////////////////////
//////////////////////// $$$$$$$  |\$$\ $$  | //////////////////////////
//////////////////////// $$  __$$<  \$$$$  /  //////////////////////////
//////////////////////// $$ |  $$ | $$  $$<   //////////////////////////
//////////////////////// $$ |  $$ |$$  /\$$\  //////////////////////////
//////////////////////// \__|  \__|\__/  \__| //////////////////////////                                                
////////////////////////////////////////////////////////////////////////                    
    rx          rx(
                    .clock(i_Clock),
                    .reset(w_Reset_Buffered),
                    .i_RX_Serial(i_Rx_UART),
                    .o_DataOut(w_Rx_DataOut),
                    .i_ParityEn(w_Parity_Selector),
                    .i_BaudrateMode(w_Baudrate_Selector),
                    .i_Datalength(w_Datalength_Selector),
                    .o_ParityError(w_Rx_ParityError),        
                    .o_FrameError(w_Rx_FrameError), 
                    .o_DataReady(w_Rx_DataReady)
                    );                  
////////////////////////////////////////////////////////////////////////
///// $$$$$$$\                 $$$$$$$$\$$$$$$\$$$$$$$$\ $$$$$$\   /////
///// $$  __$$\                $$  _____\_$$  _$$  _____$$  __$$\  /////
///// $$ |  $$ $$\   $$\       $$ |       $$ | $$ |     $$ /  $$ | /////
///// $$$$$$$  \$$\ $$  |      $$$$$\     $$ | $$$$$\   $$ |  $$ | /////
///// $$  __$$< \$$$$  /       $$  __|    $$ | $$  __|  $$ |  $$ | /////
///// $$ |  $$ |$$  $$<        $$ |       $$ | $$ |     $$ |  $$ | /////
///// $$ |  $$ $$  /\$$\       $$ |     $$$$$$\$$ |      $$$$$$  | /////
///// \__|  \__\__/  \__|      \__|     \______\__|      \______/  /////
////////////////////////////////////////////////////////////////////////     
    FIFObuffer  rx_fifo(
                        .clock(i_Clock),
                        .reset(w_Reset_Buffered),                
                        .i_Data(w_Rx_DataOut), 
                        .o_Data(w_Rx_FIFO_DataOut), 
                        .i_ReadRequest(w_Rx_FIFO_ReadRequest), 
                        .i_WriteRequest(w_Rx_DataReady),                                       
                        .o_Empty(w_Rx_FIFO_Buffer_EMPTY), 
                        .o_Full(w_Rx_FIFO_Buffer_FULL),
								.o_Overrun(o_LED2)
                       );                      
////////////////////////////////////////////////////////////////////////
//////////////////////// $$$$$$$$\        //////////////////////////////
//////////////////////// \__$$  __|       //////////////////////////////
////////////////////////    $$ $$\   $$\  //////////////////////////////
////////////////////////    $$ \$$\ $$  | //////////////////////////////
////////////////////////    $$ |\$$$$  /  //////////////////////////////
////////////////////////    $$ |$$  $$<   //////////////////////////////
////////////////////////    $$ $$  /\$$\  //////////////////////////////
////////////////////////    \__\__/  \__| //////////////////////////////
////////////////////////////////////////////////////////////////////////  
    tx              tx(
                        .clock(i_Clock),
                        .reset(w_Reset_Buffered), 
                        .i_ParityEn(w_Parity_Selector), 
                        .i_Datalength(w_Datalength_Selector),
                        .i_Baudrate(w_Baudrate_Selector), 
                        .i_Data(w_Tx_UART_Data), 
                        .i_WriteEnable(w_Tx_UART_WriteEnable), 
                        .o_DataOut(o_Tx_UART),
                        .o_Busy(w_Tx_UART_Busy)
                        );
////////////////////////////////////////////////////////////////////////
/////////// $$$$$$$\                             $$\      //////////////
/////////// $$  __$$\                            $$ |     //////////////
/////////// $$ |  $$ |$$$$$$\  $$$$$$$\ $$$$$$\$$$$$$\    //////////////
/////////// $$$$$$$  $$  __$$\$$  _____$$  __$$\_$$  _|   //////////////
/////////// $$  __$$<$$$$$$$$ \$$$$$$\ $$$$$$$$ |$$ |     //////////////
/////////// $$ |  $$ $$   ____|\____$$\$$   ____|$$ |$$\  //////////////
/////////// $$ |  $$ \$$$$$$$\$$$$$$$  \$$$$$$$\ \$$$$  | //////////////
/////////// \__|  \__|\_______\_______/ \_______| \____/  //////////////
////////////////////////////////////////////////////////////////////////
reset_buffer reset_buffer_block (
                                .clock(i_Clock),
                                .i_Reset(i_SW_Reset),
                                .o_Reset(w_Reset_Buffered),
										  .o_LED4(o_LED4)
                                );
////////////////////////////////////////////////////////////////////////                
/////////////////// $$\      $$$$$$\ $$$$$$$\   ////////////////////////
/////////////////// $$ |    $$  __$$\$$  __$$\  ////////////////////////
/////////////////// $$ |    $$ /  \__$$ |  $$ | ////////////////////////
/////////////////// $$ |    $$ |     $$ |  $$ | ////////////////////////
/////////////////// $$ |    $$ |     $$ |  $$ | ////////////////////////
/////////////////// $$ |    $$ |  $$\$$ |  $$ | ////////////////////////
/////////////////// $$$$$$$$\$$$$$$  $$$$$$$  | ////////////////////////
/////////////////// \________\______/\_______/  ////////////////////////
////////////////////////////////////////////////////////////////////////
    lcd_rev         lcd (
                    .clock(i_Clock),
                    .reset(w_Reset_Buffered),
                    .o_LCD(o_LCD_Data),
                    .o_LCD_RS(o_LCD_RS),
                    .o_LCD_RW(o_LCD_RW),
                    .o_LCD_E(o_LCD_E),
                    .o_Display_Ready(w_LCD_Done_Display),	                
                    .i_Data_Valid(w_LCD_Valid_Data),
                    .i_Data_Character(w_Tx_UART_Data)
                );               
////////////////////////////////////////////////////////////////////////
/////////// $$$$$$$$\ $$\                               	///////////////                   
/////////// $$  _____|$$ |                              	///////////////                   
/////////// $$ |      $$ | $$$$$$\   $$$$$$\   $$$$$$$\ 	///////////////                   
/////////// $$$$$\    $$ | \____$$\ $$  __$$\ $$  _____|	///////////////                   
/////////// $$  __|   $$ | $$$$$$$ |$$ /  $$ |\$$$$$$\  	///////////////                   
/////////// $$ |      $$ |$$  __$$ |$$ |  $$ | \____$$\ 	///////////////                   
/////////// $$ |      $$ |\$$$$$$$ |\$$$$$$$ |$$$$$$$  |	///////////////                   
/////////// \__|      \__| \_______| \____$$ |\_______/ 	///////////////                   
///////////                         $$\   $$ |          	///////////////                   
///////////                         \$$$$$$  |          	///////////////                   
///////////                          \______/            ///////////////                   
////////////////////////////////////////////////////////////////////////                    
   parity_detector parit_det(   
                        .clock(i_Clock),
                        .reset(w_Reset_Buffered),                        
                        .i_Data(w_Rx_DataOut), 
                        .i_Enable(w_Rx_DataReady),
								.i_Parity(i_SW_Parity),
                        .o_Parity(w_Parity_Value_Det),
                        .o_Valid(w_Parity_Valid_Det)                   
                        ); 
   datalength_detector datalen_det(   
                        .clock(i_Clock),
                        .reset(w_Reset_Buffered),                   
                        .i_Data(w_Rx_DataOut), 
                        .i_Enable(w_Rx_DataReady),
                        .o_Datalength(w_Datalength_Value_Det),
                        .o_Valid(w_Datalength_Valid_Det)                   
                        );     
   baudrate_detector baud_det(   
                        .clock(i_Clock),
                        .reset(w_Reset_Buffered),                      
                        .i_Data(w_Rx_DataOut), 
                        .i_Enable(w_Rx_DataReady),
                        .o_Baudrate(w_Baudrate_Value_Det),
                        .o_Valid(w_Baudrate_Valid_Det)                   
                        );  
             
                    
endmodule
